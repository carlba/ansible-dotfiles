# https://adamcod.es/2014/09/23/vagrant-ansible-quickstart-tutorial.html
---
- hosts: localhost
  tasks:
    - name: purge old atom installation
      file:
        path: "{{ ansible_env.HOME }}/.atom"
        state: absent
      when: false

    - name: Install atom deb package
      become: true
      apt:
        deb: https://atom.io/download/deb
      when: ansible_os_family in ['Ubuntu', 'Debian']

    - name: "install atom"
      become: true
      package: name=atom state=present update_cache=yes
      tags: ["packages", "atom"]
      when: ansible_os_family in ['Manjaro Linux']

    - name: "install hunspell (required for spellchecking to work)"
      become: true
      package:
        name: item
        state: present
      with_items:
        - hunspell
        - hunspell-en_US
      tags: ["packages", "atom"]
      when: ansible_os_family in ['Manjaro Linux']

    - name: install pip for python2
      become: true
      package: name=python2-pip state=present

    - name: install dependencies for linter-flake8
      become: true
      pip: name="{{item}}" executable=pip2
      with_items:
        - flake8
        - flake8-docstrings
        - pycodestyle
        - ansible-lint

    - name: install dependencies for linter-shellcheck
      become: true
      package: name="{{item}}"
      with_items:
        - shellcheck

    - name: install dependencies for rst-preview-pandoc (debian)
      become: true
      apt:
        deb: https://github.com/jgm/pandoc/releases/download/1.19.2.1/pandoc-1.19.2.1-1-amd64.deb
      when: ansible_os_family in ['Ubuntu', 'Debian']

    - name: install dependencies for rst-preview-pandoc (arch)
      aur: name=pandoc tool=pacaur
      when: ansible_os_family in ['Manjaro Linux']

    - name: get installed atom packages
      find:
        paths: "{{ ansible_env.HOME }}/.atom/packages"
        file_type: directory
      register: find_result

    - name: get installed atom packages
      set_fact:
        installed_atom_packages: "{{ find_result.files | map(attribute='path') | map('basename') | list }}"

    - name: install atom dependencies
      shell: "apm install {{item}}"
      with_items:
        - gist
        - linter
        - linter-flake8
        - minimap
        - minimap-bookmarks
        - minimap-cursorline
        - minimap-find-and-replace
        - minimap-git-diff
        - minimap-highlight-selected
        - minimap-linter
        - minimap-quick-highlight
        - minimap-selection
        - sync-settings
        - zenburn
        - linter-shellcheck
        - autocomplete-python
        - rst-preview-pandoc
        - file-icons
        - autocomplete-ansible
        - linter-ansible-linting

      when: "{{ item not in installed_atom_packages}}"
