---

- hosts: all
  tasks:

  - name: Ensure it is possible to use md5sum
    package: name=md5sha1sum

  - name: Speed up dock autohide
    osx_defaults:
      domain: com.apple.dock
      key: autohide-time-modifier
      type: int
      value: 0
      state: present

  - name: Speed up dock autohide
    osx_defaults:
      domain: com.apple.dock
      key: autohide-delay
      type: float
      value: 0.0
      state: present

  - name: Promt on quit
    osx_defaults:
      domain: com.googlecode.iterm2
      key: PromptOnQuit
      type: string
      value: 0
      state: present

  - name: Create KeyBindings Directory
    file:
      path: "{{ ansible_env.HOME }}/Library/KeyBindings"
      state: directory

  - name: Remap home and end to linux behaviour
    blockinfile:
      marker: "/* {mark} ANSIBLE MANAGED BLOCK (Remap home and end to linux behaviour) */"
      dest: "{{ ansible_env.HOME }}/Library/KeyBindings/DefaultKeyBinding.dict"
      create: true
      block: |
        {
            "\UF729" = "moveToBeginningOfLine:"; /* Home */
            "\UF72B" = "moveToEndOfLine:"; /* End */
            "$\UF729" = "moveToBeginningOfLineAndModifySelection:"; /* Shift + Home */
            "$\UF72B" = "moveToEndOfLineAndModifySelection:"; /* Shift + End */
            "^\UF729" = "moveToBeginningOfDocument:"; /* Ctrl + Home */
            "^\UF72B" = "moveToEndOfDocument:"; /* Ctrl + End */
            "$^\UF729" = "moveToBeginningOfDocumentAndModifySelection:"; /* Shift + Ctrl + Home */
            "$^\UF72B" = "moveToEndOfDocumentAndModifySelection:"; /* Shift + Ctrl + End */
        }

  # # Creates an entry like "PATH=/opt/bin" on top of crontab
  # - name: Add path to crontab
  #   cron:
  #     name: PATH
  #     env: true
  #     value: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

  # - name: Add cronjob that Commits changes to wiki repo
  #   cron:
  #     name: "Commit changes to wiki repo"
  #     user: "{{ ansible_env.USER }}"
  #     job: 'cd ~/development/wiki; git pull > /dev/null; git add . > /dev/null;
  #           git commit -m$(date +\%Y\%m\%dT\%H:\%M:\%SZ) > /dev/null;
  #           git push &>/dev/null'

  - name: Add Karabiner-Elements
    homebrew_cask:
      name: Karabiner-Elements

  - name: Ensure Karabiner config directory exists
    file:
      path: "{{ ansible_env.USER }}/.config/karabiner"
      state: directory

  - name: Add Karabiner-Elements config to map caps lock to F19
    template:
      src: karabiner.json.j2
      dest: "{{ ansible_env.HOME }}/.config/karabiner/karabiner.json"

  # TODO: Only add the login item if it doesn't exist
  - name: Ensure Karabiner-Elements is launched on startup
    shell: >
      osascript -e 'tell application "System Events" to make login item at end with properties
      {path:"/Applications/Karabiner-Elements.app", hidden:true}'
    when: false

  - name: Get status of Kernel Extension User Consent
    become: true
    shell: spctl --status
    register: spctl_output
    ignore_errors: true

  - name: Ensure fix damaged app message on macOS Sierra doesn't appear
    become: true
    shell: spctl --master-disable
    when: not "assessments disabled" == spctl_output.stdout

  - stat: path="/Applications/CleanMyMac 3"
    register: clean_my_mac_path

  - name: Ensure temp CleanMyMac folder exist
    file:
      path: /tmp/clean_my_mac
      state: directory
    when: not clean_my_mac_path.stat.exists

  - name: Ensure temp CleanMyMac folder exist
    copy:
      src: resources/CleanMyMac_3_3.9.6__TNT_.dmg
      dest: /tmp/clean_my_mac
    when: not clean_my_mac_path.stat.exists

  - name: mount the downloaded dmg
    shell: hdiutil attach /tmp/clean_my_mac/CleanMyMac_3_3.9.6__TNT_.dmg -nobrowse
    when: not clean_my_mac_path.stat.exists

  - name: mount the downloaded dmg
    shell: >
      hdiutil attach "/Volumes/CleanMyMac 3 3.9.6/Manual install/CleanMyMac 3 3.9.6 [TNT].dmg"
      -nobrowse
    when: not clean_my_mac_path.stat.exists

  - name: Ensure the application is copied to Applications
    become: true
    shell: cp -r "/Volumes/CleanMyMac 3 3.9.6 1/CleanMyMac 3.app" /Applications
    when: not clean_my_mac_path.stat.exists

  - name: unmount the downloaded dmg
    become: true
    shell: hdiutil detach "/Volumes/CleanMyMac 3 3.9.6 1"
    when: not clean_my_mac_path.stat.exists

  - name: unmount the downloaded dmg
    become: true
    shell: hdiutil detach "/Volumes/CleanMyMac 3 3.9.6"
    when: not clean_my_mac_path.stat.exists

  - name: Ensure the CleanMyMac temp directory is removed
    file:
      path: /tmp/clean_my_mac
      state: absent
    when: not clean_my_mac_path.stat.exists

  - name: Ensure watch CLI tool is installed
    package:
      name: watch
      state: present
    tags: cli

  - name: Ensure locate service is autostarted and running
    become: true
    shell: launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist
    tags: service

  - name: Ensure temp DaisyDisk folder exist
    file:
      path: /tmp/daisy_disk
      state: directory
    tags: daisydisk

  - name: Ensure DaisyDisk zip-file is unarchived into it's temp folder
    unarchive:
      src: 'resources/DaisyDisk 4.6.5.zip'
      dest: /tmp/daisy_disk
    tags: daisydisk

  - name: Ensure the DaisyDisk .app file is copied to Applications
    copy:
      src: '/tmp/daisy_disk/DaisyDisk.app'
      dest: /Applications
    tags: daisydisk

  - name: Ensure temp DaisyDisk folder does not exist
    file:
      path: /tmp/daisy_disk
      state: absent
    tags: daisydisk