- name: check if tmux is running
  shell: ps aux | grep tmux | grep -v grep | awk '{print $2}'
  changed_when: false
  failed_when: false
  register: tmux_processes
  when: false

- name: kill tmux if it running
  shell: kill -9 {{ item }}
  with_items: "{{ tmux_processes.stdout_lines }}"
  when: tmux_processes.rc == 0
  when: false

# http://docs.ansible.com/ansible/git_module.html
- name: make sure git is installed
  become: true
  package:
    name: git
    state: present
  when: ansible_os_family not in ['Darwin']

# http://docs.ansible.com/ansible/git_module.html
- name: make sure git is installed
  package:
    name: git
    state: present
  when: ansible_os_family in ['Darwin']

# http://docs.ansible.com/ansible/git_module.html
- name: update git repo
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"
    clone: yes
    update: yes

- name: replace tmux config
  template:
    src: tmux.conf.j2
    dest: "{{ ansible_env.HOME }}/.tmux.conf"
    force: true

- name: install tmux plugins
  shell: "{{ ansible_env.HOME }}/.tmux/plugins/tpm/bin/install_plugins"
  register: result
  changed_when: '"download success" in result.stdout'

- name: make sure 256 colors is used in tmux
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (make sure 256 colors is used in tmux)"
    content: export TERM=xterm-256color
    state: absent
  when: ansible_os_family not in ['Darwin']

- name: create a bash history file for each tmux window
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (create a bash history file for each tmux window)"
    content: |
      set_tmux_window_hist_file () {
        [[ ! -z $TMUX ]] && export HISTFILE=~/.history/$(tmux display-message -p '#W');
      }
      shopt -s histappend
      PROMPT_COMMAND="set_tmux_window_hist_file;history -a;$PROMPT_COMMAND"
    state: present
    create: yes

- name: create a tmuxify command that creates a session named by the current users name
  become: true
  template:
    src: tmuxify.j2
    dest: /usr/local/bin/tmuxify
    mode: "u+x,g+x,o+x"
    force: yes
